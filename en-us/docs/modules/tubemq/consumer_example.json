{
  "filename": "consumer_example.md",
  "__html": "<h2>1 Consumer Example</h2>\n<p>TubeMQ provides two ways to consumer message, PullConsumer and PushConsumer:</p>\n<h3>1.1 PullConsumer</h3>\n<pre><code>```java\npublic class PullConsumerExample {\n\n    public static void main(String[] args) throws Throwable {\n        final String masterHostAndPort = &quot;localhost:8000&quot;;\n        final String topic = &quot;test&quot;;\n        final String group = &quot;test-group&quot;;\n        final ConsumerConfig consumerConfig = new ConsumerConfig(masterHostAndPort, group);\n        consumerConfig.setConsumePosition(ConsumePosition.CONSUMER_FROM_LATEST_OFFSET);\n        final MessageSessionFactory messageSessionFactory = new TubeSingleSessionFactory(consumerConfig);\n        final PullMessageConsumer messagePullConsumer = messageSessionFactory.createPullConsumer(consumerConfig);\n        messagePullConsumer.subscribe(topic, null);\n        messagePullConsumer.completeSubscribe();\n        // wait for client to join the exact consumer queue that consumer group allocated\n        while (!messagePullConsumer.isPartitionsReady(1000)) {\n            ThreadUtils.sleep(1000);\n        }\n        while (true) {\n            ConsumerResult result = messagePullConsumer.getMessage();\n            if (result.isSuccess()) {\n                List&lt;Message&gt; messageList = result.getMessageList();\n                for (Message message : messageList) {\n                    System.out.println(&quot;received message : &quot; + message);\n                }\n                messagePullConsumer.confirmConsume(result.getConfirmContext(), true);\n            }\n        }\n    }   \n\n}\n``` \n</code></pre>\n<h3>1.2 PushConsumer</h3>\n<pre><code>```java\npublic class PushConsumerExample {\n\n    public static void test(String[] args) throws Throwable {\n        final String masterHostAndPort = &quot;localhost:8000&quot;;\n        final String topic = &quot;test&quot;;\n        final String group = &quot;test-group&quot;;\n        final ConsumerConfig consumerConfig = new ConsumerConfig(masterHostAndPort, group);\n        consumerConfig.setConsumePosition(ConsumePosition.CONSUMER_FROM_LATEST_OFFSET);\n        final MessageSessionFactory messageSessionFactory = new TubeSingleSessionFactory(consumerConfig);\n        final PushMessageConsumer pushConsumer = messageSessionFactory.createPushConsumer(consumerConfig);\n        pushConsumer.subscribe(topic, null, new MessageListener() {\n\n            @Override\n            public void receiveMessages(PeerInfo peerInfo, List&lt;Message&gt; messages) throws InterruptedException {\n                for (Message message : messages) {\n                    System.out.println(&quot;received message : &quot; + new String(message.getData()));\n                }\n            }\n\n            @Override\n            public Executor getExecutor() {\n                return null;\n            }\n\n            @Override\n            public void stop() {\n                //\n            }\n        });\n        pushConsumer.completeSubscribe();\n        CountDownLatch latch = new CountDownLatch(1);\n        latch.await(10, TimeUnit.MINUTES);\n    }\n}\n```\n</code></pre>\n",
  "link": "/en-us/docs/modules/tubemq/consumer_example.html",
  "meta": {
    "title": "Consumer Example - Apache InLong's TubeMQ module"
  }
}