{
  "filename": "quick_start.md",
  "__html": "<h2>Deploy TubeMQ Manager</h2>\n<p>All deploying files at <code>inlong-tubemq-manager</code> directory.</p>\n<h3>configuration</h3>\n<ul>\n<li>create <code>tubemanager</code> and account in MySQL.</li>\n<li>Add mysql information in conf/application.properties:</li>\n</ul>\n<pre><code class=\"language-ini\"><span class=\"hljs-comment\"># mysql configuration for manager</span>\n<span class=\"hljs-attr\">spring.datasource.url</span>=jdbc:mysql://mysql_ip:mysql_port/tubemanager\n<span class=\"hljs-attr\">spring.datasource.username</span>=mysql_username\n<span class=\"hljs-attr\">spring.datasource.password</span>=mysql_password\n</code></pre>\n<h3>start service</h3>\n<pre><code class=\"language-bash\">$ bin/start-manager.sh \n</code></pre>\n<h3>register TubeMQ cluster</h3>\n<p>replace <code>master_ip</code> and other parameters of TubeMQ Clusters, .</p>\n<pre><code>curl --header &quot;Content-Type: application/json&quot; --request POST --data \\\n'{&quot;masterIp&quot;:&quot;master_ip&quot;,&quot;clusterName&quot;:&quot;inlong&quot;,&quot;masterPort&quot;:&quot;8715&quot;,&quot;masterWebPort&quot;:&quot;8080&quot;,&quot;createUser&quot;:&quot;manager&quot;,&quot;token&quot;:&quot;abc&quot;}' \\\nhttp://127.0.0.1:8089/v1/cluster?method=add\n</code></pre>\n<h3>Appendix: Other Operation interface</h3>\n<h4>cluster</h4>\n<p>Query full data of clusterId and clusterName (get)</p>\n<p>Example</p>\n<p>【GET】 /v1/cluster</p>\n<p>return value</p>\n<pre><code>{\n&quot;errMsg&quot;: &quot;&quot;,\n&quot;errCode&quot;: 0,\n&quot;result&quot;: true,\n&quot;data&quot;: &quot;[{\\&quot;clusterId\\&quot;:1,\\&quot;clusterName\\&quot;:\\&quot;1124\\&quot;, \\&quot;masterIp\\&quot;:\\&quot;127.0.0.1\\&quot;}]&quot;\n}\n</code></pre>\n<h4>topic</h4>\n<h5>add topicTask</h5>\n<p>parameter:</p>\n<pre><code>type\t (required) request type, fill in the field: op_query\nclusterId\t(required) Request cluster id\naddTopicTasks (required) topicTasks, create task task json\nuser\t(required) After the access authorization verification needs to verify the user, it is reserved here\n</code></pre>\n<p>addTopicTasks currently only includes one field as topicName\nAfter accessing the region design, a new region field will be added to represent brokers in different regions\nCurrently an addTopicTask will create topics in all brokers in the cluster</p>\n<p>AddTopicTasks is a list of the following objects, which can carry multiple create topic requests</p>\n<pre><code>topicName (required) topic name\n</code></pre>\n<p>Example</p>\n<p>【POST】 /v1/task?method=addTopicTask</p>\n<pre><code>{\n&quot;clusterId&quot;: &quot;1&quot;,\n&quot;addTopicTasks&quot;: [{&quot;topicName&quot;: &quot;1&quot;}],\n&quot;user&quot;: &quot;test&quot;\n}\n</code></pre>\n<p>return json</p>\n<pre><code>{\n&quot;errMsg&quot;: &quot;There are topic tasks [a12322] already in adding status&quot;,\n&quot;errCode&quot;: 200,\n&quot;result&quot;: false,\n&quot;data&quot;: &quot;&quot;\n}\n</code></pre>\n<p>If result is false, the writing task failed</p>\n<h5>Query whether a topic is successfully created (business can be written)</h5>\n<pre><code>clusterId\t(Required) Request cluster id\ntopicName   (Required) Query topic name\nuser\t(Required) After the access authorization verification needs to verify the user, it is reserved here\n</code></pre>\n<p>example</p>\n<p>【POST】 /v1/topic?method=queryCanWrite</p>\n<pre><code>{\n&quot;clusterId&quot;: &quot;1&quot;,\n&quot;topicName&quot;: &quot;1&quot;,\n&quot;user&quot;: &quot;test&quot;\n}\n</code></pre>\n<p>return json</p>\n<pre><code>{ &quot;result&quot;:true, &quot;errCode&quot;:0, &quot;errMsg&quot;:&quot;OK&quot;, }\n{ &quot;result&quot;:false, &quot;errCode&quot;: 100, &quot;errMsg&quot;:&quot;topic test is not writable&quot;}\n{ &quot;result&quot;:false, &quot;errCode&quot;: 101, &quot;errMsg&quot;:&quot;no such topic in master&quot;}\n</code></pre>\n<p>result is false as not writable</p>\n",
  "link": "/en-us/docs/modules/tubemq/tubemq-manager/quick_start.html",
  "meta": {}
}