{
  "filename": "quick_start.md",
  "__html": "<h1>1. Compile</h1>\n<ul>\n<li>\n<p>Environment preparation: Java (1.8+) and Maven (3.3+) tools have been installed correctly.</p>\n</li>\n<li>\n<p>Enter the <code>inlong-manager</code> directory of the project through the terminal of macOS (or cmd on Windows), and run the following Maven command to package the project:</p>\n</li>\n</ul>\n<p>-Compile and Package</p>\n<pre><code>mvn clean package -DskipTests\n</code></pre>\n<ul>\n<li>After the correct packaging is completed, you can see the tar package in the <code>target</code> directory of each submodule, manager-web-xxx-incubating-SNAPSHOT.tar.gz</li>\n</ul>\n<h1>2 Dependency Preparation</h1>\n<h2>2.1 Database initialization</h2>\n<ul>\n<li>mysql 5.7+, create a database in advance, and import inlong-manager/doc/sql/apache_inlong_manager.sql to complete the initialization of the table structure and basic data, and modify the database connection in application-xx.yml</li>\n<li>zookeeper 3.5+, configure the information to the corresponding location of the application-xx.yml file</li>\n<li>Tube cluster information, and modify tube-related configuration information in application-xx.yml</li>\n<li>hadoop 2.10.x cluster, hive 2.3.x needs to be built and started in advance</li>\n</ul>\n<h1>3. Background service deployment &amp; startup</h1>\n<h2>3.1 manager-web deployment</h2>\n<ul>\n<li>3.1.1 Find the installation package, enter /apache-inlong/inlong-manager/manager-web/target and find manager-web-xxx-incubating-SNAPSHOT.tar.gz</li>\n<li>3.1.2 Deploy the installation package and press it to the corresponding directory of the server where the service will be deployed tar -zxvf manager-web-xxx-incubating-SNAPSHOT.tar.gz</li>\n<li>3.1.3 Modify the configuration file, change the configuration file in manager-web/conf, take profile.active=dev in application.yml as an example, modify the application-dev.yml file according to the actual content</li>\n<li>3.1.4 Start the service, execute the <a href=\"http://start.sh\">start.sh</a> script in the bin directory, and observe whether the log manager-web/log/manager-web.log and the back-end port are listening normally</li>\n</ul>\n<h2>3.2 manager-apenapi deployment</h2>\n<ul>\n<li>3.2.1 Find the installation package, enter /apache-inlong/inlong-manager/manager-openapi/target and find manager-openapi-xxx-incubating-SNAPSHOT.tar.gz</li>\n<li>3.2.2 Deploy the installation package and press it to the corresponding directory of the server where the service will be deployed tar -zxvf manager-web-0.9.0-incubating-SNAPSHOT.tar.gz</li>\n<li>3.2.3 Modify the configuration file, change the configuration file in manager-openapi/conf, take profile.active=dev in application.yml as an example, change the content of the configuration application-dev.yml file to the real content</li>\n<li>3.2.4 Start the service, execute the <a href=\"http://start.sh\">start.sh</a> script in the bin directory, and observe whether the log manager-openapi/log/manager-openapi.log and the backend port are listening normally</li>\n</ul>\n<h2>3.3 Detailed back-end configuration</h2>\n<ul>\n<li><code>manager-web/conf/application.yml</code> file</li>\n</ul>\n<pre><code class=\"language-yml\"><span class=\"hljs-attr\">logging:</span>\n  <span class=\"hljs-attr\">level:</span>\n    <span class=\"hljs-attr\">root:</span> <span class=\"hljs-string\">INFO</span>\n    <span class=\"hljs-attr\">org:</span>\n      <span class=\"hljs-attr\">apache:</span>\n        <span class=\"hljs-attr\">inlong:</span>\n          <span class=\"hljs-attr\">manager:</span>\n            <span class=\"hljs-attr\">dao:</span>\n              <span class=\"hljs-attr\">mapper:</span> <span class=\"hljs-string\">debug</span>\n            <span class=\"hljs-attr\">third:</span>\n              <span class=\"hljs-string\">debug</span>\n\n<span class=\"hljs-attr\">spring:</span>\n  <span class=\"hljs-attr\">datasource:</span>\n    <span class=\"hljs-attr\">jdbc-url:</span> <span class=\"hljs-string\">jdbc:mysql://127.0.0.1:3306/apache_inlong_manager?serverTimezone=GMT%2b8&amp;useSSL=false&amp;allowPublicKeyRetrieval=true&amp;characterEncoding=UTF-8&amp;nullCatalogMeansCurrent=true</span>\n    <span class=\"hljs-attr\">username:</span> <span class=\"hljs-string\">xxxxxx</span>\n    <span class=\"hljs-attr\">password:</span> <span class=\"hljs-string\">xxxxxx</span>\n    <span class=\"hljs-attr\">driver-class-name:</span> <span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">com.alibaba.druid.pool.DruidDataSource</span>\n    <span class=\"hljs-attr\">druid:</span>\n      <span class=\"hljs-comment\"># Configure test query</span>\n      <span class=\"hljs-attr\">validationQuery:</span> <span class=\"hljs-string\">SELECT</span> <span class=\"hljs-string\">'x'</span>\n      <span class=\"hljs-comment\"># Initialization size, minimum, maximum</span>\n      <span class=\"hljs-attr\">initialSize:</span> <span class=\"hljs-number\">20</span>\n      <span class=\"hljs-attr\">minIdle:</span> <span class=\"hljs-number\">20</span>\n      <span class=\"hljs-attr\">maxActive:</span> <span class=\"hljs-number\">300</span>\n      <span class=\"hljs-comment\"># Configure the timeout period to wait for the connection to be acquired</span>\n      <span class=\"hljs-attr\">maxWait:</span> <span class=\"hljs-number\">600000</span>\n      <span class=\"hljs-comment\"># Configure the minimum survival time of a connection in the pool, in milliseconds</span>\n      <span class=\"hljs-attr\">minEvictableIdleTimeMillis:</span> <span class=\"hljs-number\">3600000</span>\n      <span class=\"hljs-comment\"># Detect when applying for connection. It is recommended to configure it to true, which does not affect performance and ensures safety</span>\n      <span class=\"hljs-attr\">testWhileIdle:</span> <span class=\"hljs-literal\">true</span>\n      <span class=\"hljs-comment\"># Perform detection when obtaining a connection, it is recommended to close it, which affects performance</span>\n      <span class=\"hljs-attr\">testOnBorrow:</span> <span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-comment\"># Perform detection when returning the connection, it is recommended to close it, which affects performance</span>\n      <span class=\"hljs-attr\">testOnReturn:</span> <span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-comment\"># Configure filters for monitoring statistics interception，stat:Monitoring statistics  log4j:log  wall:Defense against SQL injection</span>\n      <span class=\"hljs-attr\">filters:</span> <span class=\"hljs-string\">stat,wall</span>\n      <span class=\"hljs-comment\"># Open the mergeSql function through the connectProperties property；Slow SQL records</span>\n      <span class=\"hljs-attr\">connectionProperties:</span> <span class=\"hljs-string\">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000</span>\n\n<span class=\"hljs-comment\"># InLong configuration</span>\n<span class=\"hljs-attr\">inlong:</span>\n  <span class=\"hljs-attr\">schedule:</span>\n    <span class=\"hljs-attr\">user:</span>\n      <span class=\"hljs-attr\">enable:</span> <span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-attr\">update-cron:</span> <span class=\"hljs-string\">'0 0 2 * * ?'</span>\n  <span class=\"hljs-attr\">common:</span>\n    <span class=\"hljs-attr\">machineNum:</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">~/</span>\n    <span class=\"hljs-attr\">modules:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">agent</span>\n\n<span class=\"hljs-comment\"># Cluster info</span>\n<span class=\"hljs-attr\">cluster:</span>\n  <span class=\"hljs-attr\">tube:</span>\n    <span class=\"hljs-attr\">manager:</span> <span class=\"hljs-string\">http://127.0.0.1:8081</span>\n    <span class=\"hljs-attr\">master:</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><span class=\"hljs-string\">:8000,127.0.0.1:8010</span>\n  <span class=\"hljs-attr\">zk:</span>\n    <span class=\"hljs-attr\">url:</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><span class=\"hljs-string\">:2181</span>\n    <span class=\"hljs-attr\">root:</span> <span class=\"hljs-string\">inlong_hive</span>\n  <span class=\"hljs-attr\">hive:</span>\n    <span class=\"hljs-attr\">metastoreAddress:</span> <span class=\"hljs-string\">jdbc:mysql://127.0.0.1:3306/hive?useSSL=false</span>\n\n</code></pre>\n<h2>3.4 Background service verification:</h2>\n<p><a href=\"http://x.x.x.x/api/inlong/manager/doc.html#/home\">http://x.x.x.x/api/inlong/manager/doc.html#/home</a></p>\n<p>Here <code>x.x.x.x</code> is modified to the IP of the server where the application is deployed</p>\n",
  "link": "/en-us/docs/modules/manager/quick_start.html",
  "meta": {
    "Quick start-Apache inlong-manager": ""
  }
}