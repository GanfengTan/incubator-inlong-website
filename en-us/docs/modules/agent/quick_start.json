{
  "filename": "quick_start.md",
  "__html": "<h2>1、install</h2>\n<pre><code>env requirements：\njava JDK 1.8\nMaven 3.6 +\n\n\nmvn clean package -DskipTests\n\nThe tgz installation package can be found in the target under the agent-release\n</code></pre>\n<h2>2、Configuration</h2>\n<p>The agent supports two modes of operation: local operation and online operation</p>\n<h3>2.1 Agent configuration</h3>\n<p>Online operation needs to pull the configuration from inlong-manager, the configuration conf/agent.properties is as follows:</p>\n<pre><code class=\"language-ini\"><span class=\"hljs-attr\">agent.fetcher.classname</span>=org.apache.inlong.agent.plugin.fetcher.ManagerFetcher (the class name for fetch tasks, default ManagerFetcher）\n<span class=\"hljs-attr\">agent.local.ip</span>=Write local ip\n<span class=\"hljs-attr\">agent.manager.vip.http.host</span>=manager host\n<span class=\"hljs-attr\">agent.manager.vip.http.port</span>=manager port\n</code></pre>\n<h3>2.2 Proxy configuration</h3>\n<p>Create a new folder named .inlong in the agent directory, and create a new bid+.local file inside. For example, if the sending bid is set to a, then create a new file a.local</p>\n<p>write:</p>\n<pre><code class=\"language-ini\">{\"cluster_id\":1,\"isInterVisit\":1,\"size\":1,\"address\": [{\"port\":write proxy port,\"host\":\"write proxy ip\"}], \"switch\":0}\n</code></pre>\n<h3>2.3 local job configuration</h3>\n<p>If you do not use the online mode, you can use the local file to create a new read task\nCreate a new directory jobs in conf,\nvim job1.json：</p>\n<p>put</p>\n<pre><code class=\"language-json\">   {\n    <span class=\"hljs-attr\">\"job\"</span>: {\n    \n    <span class=\"hljs-attr\">\"dir\"</span>: {\n    \n    <span class=\"hljs-attr\">\"pattern\"</span>: <span class=\"hljs-string\">\"The path of the file to be read, which can contain regular expressions\"</span>\n    \n    },\n    \n    <span class=\"hljs-attr\">\"trigger\"</span>: <span class=\"hljs-string\">\"org.apache.inlong.agent.plugin.trigger.DirectoryTrigger\"</span>,\n    \n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    \n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"fileAgentTest\"</span>,\n    \n    <span class=\"hljs-attr\">\"source\"</span>: <span class=\"hljs-string\">\"org.apache.inlong.agent.plugin.sources.TextFileSource\"</span>,\n    \n    <span class=\"hljs-attr\">\"sink\"</span>: <span class=\"hljs-string\">\"org.apache.inlong.agent.plugin.sinks.ProxySink\"</span>,\n    \n    <span class=\"hljs-attr\">\"channel\"</span>: <span class=\"hljs-string\">\"org.apache.inlong.agent.plugin.channel.MemoryChannel\"</span>\n    \n    },\n    \n    <span class=\"hljs-attr\">\"proxy\"</span>: {\n    \n    <span class=\"hljs-attr\">\"bid\"</span>: <span class=\"hljs-string\">\"testbid1\"</span>\n    \n    }\n    \n    }\n</code></pre>\n<p>The meaning of each parameter is ：</p>\n<ul>\n<li>job.dir.pattern: Configure the read file path, which can include regular expressions</li>\n<li>job.trigger: Trigger name, the default is DirectoryTrigger, the function is to monitor the files under the folder to generate events</li>\n<li>job.source: The type of data source used, the default is TextFileSource, which reads text files</li>\n<li>job.sink：The type of writer used, the default is ProxySink, which sends messages to the proxy</li>\n<li>proxy.bid: The bid type used when writing proxy</li>\n</ul>\n<h3>2.4 Add job configuration in real time</h3>\n<h4>2.4.1 agent.propertities Modify the following two places</h4>\n<pre><code class=\"language-ini\"><span class=\"hljs-comment\"># whether enable http service</span>\n<span class=\"hljs-attr\">agent.http.enable</span>=<span class=\"hljs-literal\">true</span>\n<span class=\"hljs-comment\"># http default port</span>\n<span class=\"hljs-attr\">agent.http.port</span>=Available ports\n</code></pre>\n<h4>2.4.2 Execute the following command</h4>\n<pre><code class=\"language-bash\">    curl --location --request POST <span class=\"hljs-string\">'http://localhost:8129/config/job'</span> \\\n    --header <span class=\"hljs-string\">'Content-Type: application/json'</span> \\\n    --data <span class=\"hljs-string\">'{\n    \"job\": {\n    \"dir\": {\n    \"path\": \"\",\n    \"pattern\": \"/data/inlong-agent/test.log\"\n    },\n    \"trigger\": \"org.apache.inlong.agent.plugin.trigger.DirectoryTrigger\",\n    \"id\": 1,\n    \"thread\": {\n    \"running\": {\n    \"core\": \"4\"\n    },\n    \"onejob\": true\n    },\n    \"name\": \"fileAgentTest\",\n    \"source\": \"org.apache.inlong.agent.plugin.sources.TextFileSource\",\n    \"sink\": \"org.apache.inlong.agent.plugin.sinks.TdBusSink\",\n    \"channel\": \"org.apache.inlong.agent.plugin.channel.MemoryChannel\"\n    },\n    \"bus\": {\n    \"bid\": \"bid10\",\n    \"tdmanager\": {\n    \"port\": \"8099\"\n    }\n    },\n    \"op\": \"add\"\n    }'</span>\n</code></pre>\n<h2>3、run</h2>\n<p>After decompression, run the following command</p>\n<pre><code class=\"language-bash\">sh agent.sh start\n</code></pre>\n",
  "link": "/en-us/docs/modules/agent/quick_start.html",
  "meta": {}
}