"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[517],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=a,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},86463:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),i=["components"],l={title:"Standalone",sidebar_position:1},s=void 0,p={unversionedId:"deployment/standalone",id:"deployment/standalone",isDocsHomePage:!1,title:"Standalone",description:"Environment Requirements",source:"@site/docs/deployment/standalone.md",sourceDirName:"deployment",slug:"/deployment/standalone",permalink:"/docs/next/deployment/standalone",editUrl:"https://github.com/apache/incubator-inlong-website/edit/master/docs/deployment/standalone.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Standalone",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Pulsar Example",permalink:"/docs/next/quick_start/pulsar_example"},next:{title:"Docker",permalink:"/docs/next/deployment/docker"}},u=[{value:"Environment Requirements",id:"environment-requirements",children:[]},{value:"Configure",id:"configure",children:[]},{value:"Start",id:"start",children:[]},{value:"Stop",id:"stop",children:[]},{value:"Check",id:"check",children:[]}],c={toc:u};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"environment-requirements"},"Environment Requirements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ZooKeeper 3.5+"),(0,o.kt)("li",{parentName:"ul"},"MySQL 5.7+"),(0,o.kt)("li",{parentName:"ul"},"Flink 1.13.5"),(0,o.kt)("li",{parentName:"ul"},"Apache Pulsar 2.6+ (Optional)"),(0,o.kt)("li",{parentName:"ul"},"Docker or Nginx ")),(0,o.kt)("h2",{id:"configure"},"Configure"),(0,o.kt)("p",null,"Add relevant global configuration parameters to the conf file in conf/standalone.conf:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"# Selection of message queue source: tubemq or pulsar\nsource_type=tubemq\n# Selection of sort sink: hive or clickhouse\nsink_type=hive\n# MySQL service, IP, port, user and password\nspring_datasource_hostname=MYSQL_HOSTNAME\nspring_datasource_port=MYSQL_PORT\nspring_datasource_username=MYSQL_USERNAME\nspring_datasource_password=MYSQL_PASSWORD\n###############################################################################\n# zookeeper address\nzkServerAddr=127.0.0.1:2181\n###############################################################################\n# tubemq (Optional)\ntubemqMaster_hostName=YOU_LOCAL_IP\ntubemqBroker_hostName=YOU_LOCAL_IP\nTUBE_MANAGER_IP=YOU_LOCAL_IP\nmetaDataPath=/stage/meta_data\nprimaryPath=/stage/msg_data\n###############################################################################\n# pulsar (Optional)\n###############################################################################\n# Service address of pulsar (Required)\npulsar_adminUrl=http://pulsar_ip:web_port\n# Pulsar broker address\uff08Required\uff09\npulsar_serviceUrl=pulsar://pulsar_ip:api_port\n# Default tenant of Pulsar\npulsar_defaultTenant=public\n###############################################################################\n# local_ip(Required)\n###############################################################################\nlocal_ip=YOU_LOCAL_IP\n###############################################################################\n")),(0,o.kt)("p",null," Initialization inlong global configuration parameters of each component:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"bin/init-config.sh \n")),(0,o.kt)("h2",{id:"start"},"Start"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"bin/inlong-daemon.sh start standalone\n")),(0,o.kt)("h2",{id:"stop"},"Stop"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"bin/inlong-daemon.sh stop standalone\n")),(0,o.kt)("h2",{id:"check"},"Check"),(0,o.kt)("p",null,"1.After the startup script is completed, JPS checks whether there are the following processes:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"1393 QuorumPeerMain\n24529 Application\n23058 MasterStartup\n23812 InLongWebApplication\n2148 Jps\n24631 CliFrontend\n24908 AgentMain\n23548 TubeMQManager\n23149 BrokerStartup\n")),(0,o.kt)("p",null,"2.If you use tubemq as the message middleware and visit the web page provided by it, you can get the information shown in the figure:\n",(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/97139576/150918086-d7c35eab-bc9f-4e39-aa8a-7e018b88bf56.png",alt:"1643034789289"})),(0,o.kt)("p",null,"3.Whether the inlong web page can be accessed normally:\n",(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/97139576/150918194-587f5e50-3c1c-47aa-893b-edf2df683a2f.png",alt:"1643034702665"})),(0,o.kt)("p",null,"If there is no problem, the inlong standalone deployment is successful."))}d.isMDXComponent=!0}}]);