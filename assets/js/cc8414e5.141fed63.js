"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[3080],{3905:function(e,t,o){o.d(t,{Zo:function(){return p},kt:function(){return h}});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function c(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),u=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=u(o),h=r,d=m["".concat(l,".").concat(h)]||m[h]||s[h]||i;return o?n.createElement(d,a(a({ref:t},p),{},{components:o})):n.createElement(d,a({ref:t},p))}));function h(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,a=new Array(i);a[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var u=2;u<i;u++)a[u]=o[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},6569:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var n=o(7462),r=o(3366),i=(o(7294),o(3905)),a=["components"],c={title:"How to Commit",sidebar_position:2},l="How to Commit",u={unversionedId:"how-to-commit",id:"how-to-commit",isDocsHomePage:!1,title:"How to Commit",description:"0. Preface",source:"@site/development/how-to-commit.md",sourceDirName:".",slug:"/how-to-commit",permalink:"/development/how-to-commit",editUrl:"https://github.com/apache/incubator-inlong-website/edit/master/development/how-to-commit.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"How to Commit",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"How to Contribute",permalink:"/development/how-to-contribute"},next:{title:"How to subscribe mail list",permalink:"/development/how-to-subscribe"}},p=[{value:"0. Preface",id:"0-preface",children:[]},{value:"1. Fork the repository",id:"1-fork-the-repository",children:[]},{value:"2. Configure git and commit changes",id:"2-configure-git-and-commit-changes",children:[{value:"2.1 Clone your fork to your local machine",id:"21-clone-your-fork-to-your-local-machine",children:[]},{value:"2.2 Add apache/incubator-inlong to local repository&#39;s remote branch upstream",id:"22-add-apacheincubator-inlong-to-local-repositorys-remote-branch-upstream",children:[]},{value:"2.3 Check remote repository settings",id:"23-check-remote-repository-settings",children:[]},{value:"2.4 Fetch code from upstream and update the local master branch code to the latest",id:"24-fetch-code-from-upstream-and-update-the-local-master-branch-code-to-the-latest",children:[]},{value:"2.5 Create a new branch",id:"25-create-a-new-branch",children:[]},{value:"2.6 Commit code to remote branch",id:"26-commit-code-to-remote-branch",children:[]}]},{value:"3. Open a Pull Request",id:"3-open-a-pull-request",children:[{value:"3.1 Open your github repository page",id:"31-open-your-github-repository-page",children:[]},{value:"3.2. Switch branch",id:"32-switch-branch",children:[]},{value:"3.3. New pull request",id:"33-new-pull-request",children:[]},{value:"3.4. Click <code>Create pull request</code> button to open a PR",id:"34-click-create-pull-request-button-to-open-a-pr",children:[]}]},{value:"4. Code Review",id:"4-code-review",children:[]}],s={toc:p};function m(e){var t=e.components,o=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-to-commit"},"How to Commit"),(0,i.kt)("h2",{id:"0-preface"},"0. Preface"),(0,i.kt)("p",null,"Apache InLong uses github's Pull Request (PR) to receive contributed code. This document will introduce the process of code commit in detail."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"InLong code base\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-inlong"},"https://github.com/apache/incubator-inlong"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"InLong website base\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-inlong-website"},"https://github.com/apache/incubator-inlong-website")))),(0,i.kt)("h2",{id:"1-fork-the-repository"},"1. Fork the repository"),(0,i.kt)("p",null,"Open ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-inlong"},"apache/incubator-inlong")," 's github page, clicking on the ",(0,i.kt)("inlineCode",{parentName:"p"},"fork")," button at the top right to fork."),(0,i.kt)("h2",{id:"2-configure-git-and-commit-changes"},"2. Configure git and commit changes"),(0,i.kt)("h3",{id:"21-clone-your-fork-to-your-local-machine"},"2.1 Clone your fork to your local machine"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/<your_github_name>/incubator-inlong.git\n")),(0,i.kt)("p",null,"After clone is completed, ",(0,i.kt)("inlineCode",{parentName:"p"},"origin")," will linked to the remote fork address on github by default."),(0,i.kt)("h3",{id:"22-add-apacheincubator-inlong-to-local-repositorys-remote-branch-upstream"},"2.2 Add apache/incubator-inlong to local repository's remote branch upstream"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cd  incubator-inlong\ngit remote add upstream https://github.com/apache/incubator-inlong.git\n")),(0,i.kt)("h3",{id:"23-check-remote-repository-settings"},"2.3 Check remote repository settings"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git remote -v\norigin    https://github.com/<your_github_name>/incubator-inlong.git (fetch)\norigin    https://github.com/<your_github_name>/incubator-inlong.git(push)\nupstream  https://github.com/apache/incubator-inlong.git (fetch)\nupstream  https://github.com/apache/incubator-inlong.git (push)\n")),(0,i.kt)("p",null,"There will be two repositories: ",(0,i.kt)("inlineCode",{parentName:"p"},"origin")," (own repository) and ",(0,i.kt)("inlineCode",{parentName:"p"},"upstream")," (official repository)."),(0,i.kt)("h3",{id:"24-fetch-code-from-upstream-and-update-the-local-master-branch-code-to-the-latest"},"2.4 Fetch code from upstream and update the local master branch code to the latest"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git fetch upstream\ngit pull upstream master\n")),(0,i.kt)("h3",{id:"25-create-a-new-branch"},"2.5 Create a new branch"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Generally, issue id is used as the branch name, such as: INLONG-123")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git checkout -b INLONG-123\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Make sure that the branch ",(0,i.kt)("inlineCode",{parentName:"strong"},"INLONG-123")," is building successfully on the latest code of the official master branch")),(0,i.kt)("p",null,"After the branch is created, you can start coding."),(0,i.kt)("h3",{id:"26-commit-code-to-remote-branch"},"2.6 Commit code to remote branch"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The format of the commit message must be consistent with the issue title and start with ",(0,i.kt)("inlineCode",{parentName:"p"},"[issue id]"),", such as ",(0,i.kt)("inlineCode",{parentName:"p"},"[INLONG-123] xxx"),":"),(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'git commit -a -m "[INLONG-123] xxx"\ngit push origin INLONG-123\n'))),(0,i.kt)("h2",{id:"3-open-a-pull-request"},"3. Open a Pull Request"),(0,i.kt)("h3",{id:"31-open-your-github-repository-page"},"3.1 Open your github repository page"),(0,i.kt)("p",null,"   ",(0,i.kt)("inlineCode",{parentName:"p"},"https://github.com/<your_github_name>/incubator-inlong")),(0,i.kt)("h3",{id:"32-switch-branch"},"3.2. Switch branch"),(0,i.kt)("p",null,"   Switch to committed branch ",(0,i.kt)("inlineCode",{parentName:"p"},"INLONG-123")),(0,i.kt)("h3",{id:"33-new-pull-request"},"3.3. New pull request"),(0,i.kt)("p",null,"   Click ",(0,i.kt)("inlineCode",{parentName:"p"},"New pull request")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"Compare & pull request")),(0,i.kt)("h3",{id:"34-click-create-pull-request-button-to-open-a-pr"},"3.4. Click ",(0,i.kt)("inlineCode",{parentName:"h3"},"Create pull request")," button to open a PR"),(0,i.kt)("p",null,"   Considerations when opening a pull request:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  1. The title of PR must start with issue id, which is better consistent with the commit message\n  2. You can fill in some description information or not\n  3. If a code conflict is prompted after clicking `Create pull request` , please synchronize the code of the `INLONG-123` branch with the master branch and commit it\n")),(0,i.kt)("h2",{id:"4-code-review"},"4. Code Review"),(0,i.kt)("p",null,"After creating PR, everyone can review your code and may discuss some implementation details with you, and you may need to modify them further."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Generally, the PR can be formally merged into the code base only after more than 2 PPMC/Committer reply + 1.")),(0,i.kt)("p",null,"Finally, congratulations on becoming an official contributor to InLong!"))}m.isMDXComponent=!0}}]);