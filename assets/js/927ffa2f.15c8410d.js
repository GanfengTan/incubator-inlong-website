"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[9430],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=u(n),d=o,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(m,a(a({ref:t},s),{},{components:n})):r.createElement(m,a({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},564:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return s},default:function(){return f}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={title:"Zookeeper Configure"},c="Overview",u={unversionedId:"modules/sort/protocol_introduction",id:"modules/sort/protocol_introduction",isDocsHomePage:!1,title:"Zookeeper Configure",description:"Currently the metadata management of inlong-sort relies on inlong-manager.",source:"@site/docs/modules/sort/protocol_introduction.md",sourceDirName:"modules/sort",slug:"/modules/sort/protocol_introduction",permalink:"/docs/modules/sort/protocol_introduction",editUrl:"https://github.com/apache/incubator-inlong-website/edit/main/docs/modules/sort/protocol_introduction.md",tags:[],version:"current",frontMatter:{title:"Zookeeper Configure"},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/docs/modules/sort/introduction"},next:{title:"Build && Deployment",permalink:"/docs/modules/sort/quick_start"}},s=[],p={toc:s};function f(e){var t=e.components,l=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Currently the metadata management of inlong-sort relies on inlong-manager."),(0,i.kt)("p",null,"Metadata interaction between inlong-sort and inlong-manager is performed via ZK."),(0,i.kt)("h1",{id:"zookeepers-path-structure"},"Zookeeper's path structure"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img.png",src:n(2013).Z})),(0,i.kt)("p",null,"Cluster represents a flink job. Multiple flows can be handled in the same cluster, but these flows must be homogeneous (source is the same as sink)."),(0,i.kt)("p",null,"The DataFlow represents a specific flow, and each flow is identified by a globally unique ID. The flow consists of source + sink."),(0,i.kt)("p",null,"A path at the top of the figure indicates which dataflow are running in a cluster, without metadata under the node."),(0,i.kt)("p",null,"The path below is used to store the details of the dataflow."),(0,i.kt)("h1",{id:"protocol"},"Protocol"),(0,i.kt)("p",null,"Please reference\n",(0,i.kt)("inlineCode",{parentName:"p"},"org.apache.inlong.sort.protocol.DataFlowInfo")))}f.isMDXComponent=!0},2013:function(e,t,n){t.Z=n.p+"assets/images/img-344b6f587c065734ac081babe17c0b2c.png"}}]);