"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[6235],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return u}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),u=r,g=d["".concat(l,".").concat(u)]||d[u]||h[u]||o;return t?a.createElement(g,i(i({ref:n},p),{},{components:t})):a.createElement(g,i({ref:n},p))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},29509:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var a=t(87462),r=t(63366),o=(t(67294),t(3905)),i=["components"],s={title:"How to Release",sidebar_position:6},l="How to release",c={unversionedId:"how-to-release",id:"how-to-release",title:"How to Release",description:"TODO: This page needs to be translated into English. If you are interested, just do it.",source:"@site/development/how-to-release.md",sourceDirName:".",slug:"/how-to-release",permalink:"/development/how-to-release",editUrl:"https://github.com/apache/incubator-inlong-website/edit/master/development/how-to-release.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"How to Release",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"How to vote a Committer or PPMC",permalink:"/development/how-to-vote-a-committer-ppmc"},next:{title:"How to Verify release",permalink:"/development/how-to-verify"}},p=[{value:"0. Prolegomenon",id:"0-prolegomenon",children:[],level:2},{value:"1. Adding PG KEY",id:"1-adding-pg-key",children:[{value:"1.1 Install gpg",id:"11-install-gpg",children:[],level:3},{value:"1.2 Generate gpg Key",id:"12-generate-gpg-key",children:[{value:"Attentions\uff1a",id:"attentions",children:[],level:4},{value:"Generate the key as prompt",id:"generate-the-key-as-prompt",children:[],level:4}],level:3},{value:"1.3 upload your key to public gpg keyserver",id:"13-upload-your-key-to-public-gpg-keyserver",children:[],level:3},{value:"1.4 Check whether the key is created successfully",id:"14-check-whether-the-key-is-created-successfully",children:[],level:3},{value:"1.5 Add your gpg public key to the KEYS document",id:"15-add-your-gpg-public-key-to-the-keys-document",children:[{value:"1.5.2 Add the public key to the KEYS in the release branch for releasing official version",id:"152-add-the-public-key-to-the-keys-in-the-release-branch-for-releasing-official-version",children:[],level:4}],level:3},{value:"1.6 Upload the GPG public key to your Github account",id:"16-upload-the-gpg-public-key-to-your-github-account",children:[],level:3}],level:2},{value:"2. Mavne settings",id:"2-mavne-settings",children:[],level:2},{value:"3. Build",id:"3-build",children:[{value:"3.1 Prepare branch",id:"31-prepare-branch",children:[],level:3},{value:"3.2 create tag",id:"32-create-tag",children:[],level:3},{value:"3.3 Building source code package",id:"33-building-source-code-package",children:[],level:3},{value:"3.4 Building binary package",id:"34-building-binary-package",children:[],level:3},{value:"3.5 sign the source package/binary package/sha512",id:"35-sign-the-source-packagebinary-packagesha512",children:[],level:3},{value:"3.6 check the signature/sha512",id:"36-check-the-signaturesha512",children:[],level:3}],level:2},{value:"4. Prepare for Apache release",id:"4-prepare-for-apache-release",children:[{value:"4.1  Deploy jar to Apache Nexus repository",id:"41--deploy-jar-to-apache-nexus-repository",children:[],level:3},{value:"4.2  Upload tag to git repository",id:"42--upload-tag-to-git-repository",children:[],level:3},{value:"4.3 Upload tar file to dist repo",id:"43-upload-tar-file-to-dist-repo",children:[],level:3},{value:"4.3.1 Checkout InLong to local directory",id:"431-checkout-inlong-to-local-directory",children:[],level:3},{value:"4.3.2 Add public key to KEYS file adn commit to SVN repository",id:"432-add-public-key-to-keys-file-adn-commit-to-svn-repository",children:[],level:3},{value:"4.4 Close Apache Staging repository",id:"44-close-apache-staging-repository",children:[],level:3}],level:2},{value:"5. Voting",id:"5-voting",children:[{value:"5.1 InLong community vote",id:"51-inlong-community-vote",children:[{value:"5.1.1 Vote template",id:"511-vote-template",children:[],level:4},{value:"5.1.2 Vote Result template",id:"512-vote-result-template",children:[],level:4}],level:3},{value:"5.2 incubator community vote",id:"52-incubator-community-vote",children:[{value:"5.2.1 Vote template",id:"521-vote-template",children:[],level:4},{value:"5.2.2 Vote Result template",id:"522-vote-result-template",children:[],level:4}],level:3}],level:2},{value:"6. Officially released",id:"6-officially-released",children:[{value:"6.1 Merge branch release-${release_version} to master branch",id:"61-merge-branch-release-release_version-to-master-branch",children:[],level:3},{value:"6.2 Move source code and binary package from DEV to release repository on SVN.",id:"62-move-source-code-and-binary-package-from-dev-to-release-repository-on-svn",children:[],level:3},{value:"6.3 Check whether the dev and release is correct",id:"63-check-whether-the-dev-and-release-is-correct",children:[],level:3},{value:"6.4 Release version in Apache Staging",id:"64-release-version-in-apache-staging",children:[],level:3},{value:"6.5 Update links on official website",id:"65-update-links-on-official-website",children:[],level:3},{value:"6.6. Send email to <code>dev@inlong.apache.org</code> and <code>general@incubator.apache.org</code>",id:"66-send-email-to-devinlongapacheorg-and-generalincubatorapacheorg",children:[],level:3}],level:2}],h={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-release"},"How to release"),(0,o.kt)("font",{color:"#dd0000",size:"4"},"TODO: This page needs to be translated into English. If you are interested, just do it."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This article mainly introduces how the Release Manager releases a new version in accordance with the Apache requirements.")),(0,o.kt)("h2",{id:"0-prolegomenon"},"0. Prolegomenon"),(0,o.kt)("p",null,"Source Release is the key point which Apache values, also, is necessary for a release;\nBinary Release is optional. InLong can choose whether to release the binary package to the Apache repository or to the Maven central repository."),(0,o.kt)("p",null,"For more guideline, you can refer the following links:"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://incubator.apache.org/guides/releasemanagement.html"},"Apache Release Guide")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://incubator.apache.org/"},"Apache incubator official website")),(0,o.kt)("h2",{id:"1-adding-pg-key"},"1. Adding PG KEY"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Ref\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://infra.apache.org/openpgp.html"},"https://infra.apache.org/openpgp.html"),"\n",(0,o.kt)("strong",{parentName:"p"},"This section is the requirements for release manager who is the first time to be a release manager"))),(0,o.kt)("h3",{id:"11-install-gpg"},"1.1 Install gpg"),(0,o.kt)("p",null,"For more details, please ref to ",(0,o.kt)("a",{parentName:"p",href:"https://www.gnupg.org/download/index.html"},"Official website"),", configurations under Mac OS:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ brew install gpg\n$ gpg --version #check the version, should be 2.x\n")),(0,o.kt)("h3",{id:"12-generate-gpg-key"},"1.2 Generate gpg Key"),(0,o.kt)("h4",{id:"attentions"},"Attentions\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Name is best to keep consistent with your full name of Apache ID"),(0,o.kt)("li",{parentName:"ul"},"Email should be the Apache email"),(0,o.kt)("li",{parentName:"ul"},"Name is best to only use English to avoid garbled")),(0,o.kt)("h4",{id:"generate-the-key-as-prompt"},"Generate the key as prompt"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"\u279c  ~ gpg --full-gen-key\ngpg (GnuPG) 2.2.20; Copyright (C) 2020 Free Software Foundation, Inc.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nPlease select what kind of key you want:\n   (1) RSA and RSA (default)\n   (2) DSA and Elgamal\n   (3) DSA (sign only)\n   (4) RSA (sign only)\n  (14) Existing key from card\nYour selection? 1 # input 1\nRSA keys may be between 1024 and 4096 bits long.\nWhat keysize do you want? (2048) 4096 # input 4096\nRequested keysize is 4096 bits       \nPlease specify how long the key should be valid.\n         0 = key does not expire\n      <n>  = key expires in n days\n      <n>w = key expires in n weeks\n      <n>m = key expires in n months\n      <n>y = key expires in n years\nKey is valid for? (0) 0 # input 0\nKey does not expire at all\nIs this correct? (y/N) y # input y\n\nGnuPG needs to construct a user ID to identify your key.\n\nReal name: Guangxu Cheng # input your name\nEmail address: gxcheng@apache.org # input your emal\nComment:                          # input some annotations, optional\nYou selected this USER-ID:\n    \"Guangxu Cheng <gxcheng@apache.org>\"\n\nChange (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O # input 0\nWe need to generate a lot of random bytes. It is a good idea to perform\nsome other action (type on the keyboard, move the mouse, utilize the\ndisks) during the prime generation; this gives the random number\ngenerator a better chance to gain enough entropy.\nWe need to generate a lot of random bytes. It is a good idea to perform\nsome other action (type on the keyboard, move the mouse, utilize the\ndisks) during the prime generation; this gives the random number\ngenerator a better chance to gain enough entropy.\n\n# Input the security key\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Please enter this passphrase                         \u2502\n\u2502                                                      \u2502\n\u2502 Passphrase: _______________________________          \u2502\n\u2502                                                      \u2502\n\u2502       <OK>                              <Cancel>     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n# key generatio[n will be done after your inputting the key with the following output\ngpg: key 2DD587E7B10F3B1F marked as ultimately trusted\ngpg: revocation certificate stored as '/Users/cheng/.gnupg/openpgp-revocs.d/41936314E25F402D5F7D73152DD587E7B10F3B1F.rev'\npublic and secret key created and signed.\n\npub   rsa4096 2020-05-19 [SC]\n      41936314E25F402D5F7D73152DD587E7B10F3B1F\nuid                      Guangxu Cheng <gxcheng@apache.org>\nsub   rsa4096 2020-05-19 [E]\n")),(0,o.kt)("h3",{id:"13-upload-your-key-to-public-gpg-keyserver"},"1.3 upload your key to public gpg keyserver"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"\u279c  ~ gpg --list-keys                                                        \n-------------------------------\npub   rsa4096 2020-05-18 [SC]\n      5931F8CFD04B37A325E4465D8C0D31C4149B3A87\nuid           [ultimate] Guangxu Cheng <gxcheng@apache.org>\nsub   rsa4096 2020-05-18 [E]\n\n# command for sending your key id to key server\n$ gpg --keyserver pgpkeys.mit.edu --send-key <key id>\n# Among them, pgpkeys.mit.edu is a randomly selected keyserver, and the keyserver list is: https://sks-keyservers.net/status/, which is automatically synchronized with each other, you can choose any one of them.\n")),(0,o.kt)("h3",{id:"14-check-whether-the-key-is-created-successfully"},"1.4 Check whether the key is created successfully"),(0,o.kt)("p",null,"Uploading takes about one minute, after that, you can check by your email at ",(0,o.kt)("inlineCode",{parentName:"p"},"http://keys.gnupg.net"),'. Be reminded to tick "the show full-key hashes" under advance.'),(0,o.kt)("h3",{id:"15-add-your-gpg-public-key-to-the-keys-document"},"1.5 Add your gpg public key to the KEYS document"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"SVN is required for this step\nThe svn repository of the DEV branch is: ",(0,o.kt)("a",{parentName:"p",href:"https://dist.apache.org/repos/dist/dev/incubator/inlong"},"https://dist.apache.org/repos/dist/dev/incubator/inlong"),"\nThe svn repository of the Release branch is: ",(0,o.kt)("a",{parentName:"p",href:"https://dist.apache.org/repos/dist/release/incubator/inlong"},"https://dist.apache.org/repos/dist/release/incubator/inlong")),(0,o.kt)("h4",{parentName:"blockquote",id:"151-add-the-public-key-to-keys-in-the-dev-branch-to-release-the-rc-version"},"1.5.1 Add the public key to KEYS in the dev branch to release the RC version"),(0,o.kt)("pre",{parentName:"blockquote"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'\u279c  ~ svn co https://dist.apache.org/repos/dist/dev/incubator/inlong /tmp/inlong-dist-dev\n# As this step will copy all the versions, it will take some time. If the network is broken, please use svn cleanup to delete the lock before re-execute it.\n\u279c  ~ cd inlong-dist-dev\n\u279c  inlong-dist-dev ~ (gpg --list-sigs YOUR_NAME@apache.org && gpg --export --armor YOUR_NAME@apache.org) >> KEYS # Append your key to the KEYS file\n\u279c  inlong-dist-dev ~ svn add .  # It is not needed if the KEYS document exists before.\n\u279c  inlong-dist-dev ~ svn ci -m "add gpg key for YOUR_NAME" # Later on, if you are asked to enter a username and password, just use your apache username and password.\n'))),(0,o.kt)("h4",{id:"152-add-the-public-key-to-the-keys-in-the-release-branch-for-releasing-official-version"},"1.5.2 Add the public key to the KEYS in the release branch for releasing official version"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'\u279c  ~ svn co https://dist.apache.org/repos/dist/release/incubator/inlong /tmp/inlong-dist-release\n\u279c  ~ cd inlong-dist-release\n\u279c  inlong-dist-release ~ (gpg --list-sigs YOUR_NAME@apache.org && gpg --export --armor YOUR_NAME@apache.org) >> KEYS    # Append the KEY you generated to the document KEYS, after appending, it is best to check whether it is correct\n\u279c  inlong-dist-release ~ svn add .  # It is not needed if the KEYS document exists before.\n\u279c  inlong-dist-release ~ svn ci -m "add gpg key for YOUR_NAME" # Later on, if you are asked to enter a username and password, just use your apache username and password.\n')),(0,o.kt)("h3",{id:"16-upload-the-gpg-public-key-to-your-github-account"},"1.6 Upload the GPG public key to your Github account"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Enter ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/settings/keys"},"https://github.com/settings/keys")," to add GPG KEYS."),(0,o.kt)("li",{parentName:"ol"},"Please remember to bind the email address used in the GPG key to your github account (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/settings/emails"},"https://github.com/settings/emails"),')., if you find "unverified" after adding it.')),(0,o.kt)("h2",{id:"2-mavne-settings"},"2. Mavne settings"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Skip if your have done this before")),(0,o.kt)("p",null,"Adding ",(0,o.kt)("inlineCode",{parentName:"p"},"<server>")," configurations in ~/.m2/settings.xml"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<settings xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd" xmlns="http://maven.apache.org/SETTINGS/1.1.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <servers>\n    \x3c!-- Apache Repo Settings --\x3e\n    <server>\n        <id>apache.snapshots.https</id>\n        <username>{user-id}</username>\n        <password>{user-pass}</password>\n    </server>\n    <server>\n        <id>apache.releases.https</id>\n        <username>{user-id}</username>\n        <password>{user-pass}</password>\n    </server>\n  </servers>\n<profiles>\n    <profile>\n      <id>apache-release</id>\n      <properties>\n        <gpg.keyname>Your KEYID</gpg.keyname>\x3c!-- Your GPG Keyname here --\x3e\n        \x3c!-- Use an agent: Prevents being asked for the password during the build --\x3e\n        <gpg.useagent>true</gpg.useagent>\n        <gpg.passphrase>Password for you private key</gpg.passphrase>\n      </properties>\n    </profile>\n</profiles>\n</settings>\n')),(0,o.kt)("h2",{id:"3-build"},"3. Build"),(0,o.kt)("h3",{id:"31-prepare-branch"},"3.1 Prepare branch"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Checkout out a new branch from the master branch as the release branch\uff0crelease-${release_version}")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"update ",(0,o.kt)("inlineCode",{parentName:"p"},"CHANGES.md"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"check the code, including whether compile, unit test, RAT check etc."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# build check\n$ mvn clean package -Dmaven.javadoc.skip=true\n# RAT check\n$ mvn apache-rat:check\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"update version"))),(0,o.kt)("h3",{id:"32-create-tag"},"3.2 create tag"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Make sure code check is pass before creating tag, including compile success, unit test pass, RAT check pass etc.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Create a tag with annotation")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'$ git_tag=${release_version}-${rc_version}\n$ git tag -s $git_tag -m "Tagging the ${release_version} first Releae Candidate (Candidates start at zero)"\n# if met error  gpg: signing failed: secret key not available, you should set private key first.\n$ git config user.signingkey ${KEY_ID}\n')),(0,o.kt)("h3",{id:"33-building-source-code-package"},"3.3 Building source code package"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"You should package the source code as a tar file after creating tag")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'mkdir /tmp/apache-inlong-${release_version}-${rc_version}\ngit archive --format=tar.gz --output="/tmp/apache-inlong-${release_version}-${rc_version}/apache-inlong-${release_version}-src.tar.gz" --prefix="apache-inlong-${release_version}/" $git_tag\n')),(0,o.kt)("h3",{id:"34-building-binary-package"},"3.4 Building binary package"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"compile the code in the step above.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"cd /tmp/apache-inlong-${release_version}-${rc_version} # go to directory where the source code package stay\ntar xzvf apache-inlong-${release_version}-src.tar.gz # uncompress the tar file\ncd apache-inlong-${release_version} # go to the source code directory\ncp ./inlong-distribution/target/apache-inlong-${release_version}-bin.tar.gz /tmp/apache-inlong-${release_version}-${rc_version}/  # for signature convenient, copy the binary package to the source code directory\n")),(0,o.kt)("h3",{id:"35-sign-the-source-packagebinary-packagesha512"},"3.5 sign the source package/binary package/sha512"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"for i in *.tar.gz; do echo $i; gpg --print-md SHA512 $i > $i.sha512 ; done # calculate SHA512\nfor i in *.tar.gz; do echo $i; gpg --armor --output $i.asc --detach-sig $i ; done # calculate signature\n")),(0,o.kt)("h3",{id:"36-check-the-signaturesha512"},"3.6 check the signature/sha512"),(0,o.kt)("p",null,"Ref\uff1a",(0,o.kt)("a",{parentName:"p",href:"/development/how-to-verify"},"check the candidate version"),"\ne.g. check the signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"for i in *.tar.gz; do echo $i; gpg --verify $i.asc $i ; done\n")),(0,o.kt)("h2",{id:"4-prepare-for-apache-release"},"4. Prepare for Apache release"),(0,o.kt)("h3",{id:"41--deploy-jar-to-apache-nexus-repository"},"4.1  Deploy jar to Apache Nexus repository"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"cd /tmp/apache-inlong-${release_version}-${rc_version} # go to the source code directory\ntar xzvf apache-inlong-${release_version}-src.tar.gz # uncompress source code package\ncd apache-inlong-${release_version}\nmvn -DskipTests deploy -Papache-release -Dmaven.javadoc.skip=true  # uploading\n")),(0,o.kt)("h3",{id:"42--upload-tag-to-git-repository"},"4.2  Upload tag to git repository"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"git push origin ${release_version}-${rc_version}\n")),(0,o.kt)("h3",{id:"43-upload-tar-file-to-dist-repo"},"4.3 Upload tar file to dist repo"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"SVN is need in this step, SVN repo for DEV branch is ",(0,o.kt)("a",{parentName:"p",href:"https://dist.apache.org/repos/dist/dev/incubator/inlong"},"https://dist.apache.org/repos/dist/dev/incubator/inlong"))),(0,o.kt)("h3",{id:"431-checkout-inlong-to-local-directory"},"4.3.1 Checkout InLong to local directory"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# As this step will copy all the versions, it will take some time. If the network is broken, please use svn cleanup to delete the lock before re-execute it.\nsvn co https://dist.apache.org/repos/dist/dev/incubator/inlong /tmp/inlong-dist-dev\n")),(0,o.kt)("h3",{id:"432-add-public-key-to-keys-file-adn-commit-to-svn-repository"},"4.3.2 Add public key to KEYS file adn commit to SVN repository"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'cd /tmp/inlong-dist-dev\nmkdir ${release_version}-${rc_version} # create a directory named by version\ncp /tmp/apache-inlong-${release_version}-${rc_version}/*tar.gz* ${release_version}-${rc_version}/ # copy source code and signature package to the versioned directory  \nsvn status # check svn status\nsvn add ${release_version}-${rc_version} # addi to svn\nsvn status # check svn status\nsvn commit -m "prepare for ${release_version} ${rc_version}"     # commit to SVN remote server\n')),(0,o.kt)("h3",{id:"44-close-apache-staging-repository"},"4.4 Close Apache Staging repository"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"make sure all artifacts is ok"),(0,o.kt)("ol",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Log in "),(0,o.kt)("a",{parentName:"li",href:"http://repository.apache.org"},"http://repository.apache.org")," wit your Apache account"),(0,o.kt)("li",{parentName:"ol"},"Click the Staging repositories on the left "),(0,o.kt)("li",{parentName:"ol"},"Search ",(0,o.kt)("inlineCode",{parentName:"li"},"InLong")," and select the latest unloaded repository"),(0,o.kt)("li",{parentName:"ol"},"Click the close button which will trigger a serials of checks"),(0,o.kt)("li",{parentName:"ol"},"You will get a link like ",(0,o.kt)("inlineCode",{parentName:"li"},"https://repository.apache.org/content/repositories/orgapacheinlong-xxxx")," on the Summary page if all checks passed. This link will be posted in the vote email, so, keep it safe."))),(0,o.kt)("p",null,"WARN: Close operation may fail, you should check the causes and fix them."),(0,o.kt)("h2",{id:"5-voting"},"5. Voting"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"A release need two votes due to InLong is still an incubating project now."),(0,o.kt)("ul",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ul"},"InLong community vote\uff0csend email to \uff1a",(0,o.kt)("inlineCode",{parentName:"li"},"dev@inlong.apache.org")),(0,o.kt)("li",{parentName:"ul"},"incubator community vote\uff0csend email to\uff1a",(0,o.kt)("inlineCode",{parentName:"li"},"general@incubator.apache.org"),"\nOnce InLong is graduated, InLong community vote is only needed."))),(0,o.kt)("h3",{id:"51-inlong-community-vote"},"5.1 InLong community vote"),(0,o.kt)("h4",{id:"511-vote-template"},"5.1.1 Vote template"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"Title\uff1a[VOTE] Release Apache InLong ${release_version} ${rc_version}\n\nContent\uff1a\n\nHello Apache InLong PPMC and Community,\n\n    This is a call for a vote to release Apache InLong version ${release_version}-${rc_version}.\n\n    The tag to be voted on is ${release_version}-${rc_version}:\n\n    https://github.com/apache/incubator-inlong/tree/${release_version}-${rc_version}\n\n    The release tarball, signature, and checksums can be found at:\n\n    https://dist.apache.org/repos/dist/dev/incubator/inlong/${release_version}-${rc_version}/\n\n    Maven artifacts are available in a staging repository at:\n\n    https://repository.apache.org/content/repositories/orgapacheinlong-{staging-id}\n\n    Artifacts were signed with the {YOUR_PUB_KEY} key which can be found in:\n\n    https://downloads.apache.org/incubator/inlong/KEYS\n\n    ${release_version} includes ~ ${issue_count} bug fixes and improvements done since last versions which can be found at:\n\n    https://github.com/apache/incubator-inlong/blob/${release_version}-${rc_version}/CHANGES.md\n\n    Please download, verify, and test.\n\n    The VOTE will remain open for at least 72 hours.\n\n    [ ] +1 Release this package as Apache InLong ${release_version}\n    [ ] +0\n    [ ] -1 Do not release this package because...\n\n    To learn more about apache inlong, please see\n    http://inlong.apache.org/\n\n    Checklist for reference:\n\n      [ ] Download links are valid.\n      [ ] Checksums and signatures.\n      [ ] LICENSE/NOTICE/DISCLAIMER files exist\n      [ ] No unexpected binary files\n      [ ] All source files have ASF headers\n      [ ] Can compile from source\n      [ ] All Tests Passed\n\n      More detailed checklist  please refer to:\n      https://cwiki.apache.org/confluence/display/INCUBATOR/Incubator+Release+Checklist\n\nThanks,\nYour InLong Release Manager\n")),(0,o.kt)("h4",{id:"512-vote-result-template"},"5.1.2 Vote Result template"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"Title\uff1a[RESULT][VOTE] Release Apache InLong ${release_version} ${rc_version}\n\nContent\uff1a\n\nHello Apache InLong PPMC and Community,\n\n    The vote closes now as 72hr have passed. The vote PASSES with\n    xx (+1 non-binding) votes from the PPMC,\n    xx (+1 binding) vote from the IPMC,\n    xx (+1 non-binding) vote from the rest of the developer community,\n    and no further 0 or -1 votes.\n\n    The vote thread: {vote_mail_address}\n\n    I will now bring the vote to general@incubator.apache.org to get approval by the IPMC.\n    If this vote passes also, the release is accepted and will be published.\n\nThank you for your support.\nYour InLong Release Manager\n")),(0,o.kt)("h3",{id:"52-incubator-community-vote"},"5.2 incubator community vote"),(0,o.kt)("h4",{id:"521-vote-template"},"5.2.1 Vote template"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"Title\uff1a[VOTE] Release Apache InLong(Incubating) ${release_version} ${rc_version}\n\nContent\uff1a\n\nHello Incubator Community,\n\n    This is a call for a vote to release Apache InLong(Incubating) version\n    ${release_version} ${rc_version}\n\n    The Apache InLong community has voted on and approved a proposal to release\n    Apache InLong(Incubating) version ${release_version} ${rc_version}\n\n    We now kindly request the Incubator PMC members review and vote on this\n    incubator release.\n\n    InLong community vote thread:\n    \u2022 [Link for vote thread]\n\n    Vote result thread:\n    \u2022 [Link for vote result thread]\n\n    The release candidate:\n    \u2022 https://dist.apache.org/repos/dist/dev/incubator/inlong/${release_version}-${rc_version}/\n\n    Git tag for the release:\n    \u2022 https://github.com/apache/incubator-inlong/releases/tag/${release_version}-${rc_version}\n\n    Release notes:\n    \u2022 https://github.com/apache/incubator-inlong/blob/${release_version}-${rc_version}/CHANGES.md\n\n    The artifacts signed with PGP key [your personal KEY], corresponding to [your email], that can be found in keys file:\n    \u2022 https://downloads.apache.org/incubator/inlong/KEYS\n\n    The vote will be open for at least 72 hours or until necessary number of votes are reached.\n\n    Please vote accordingly:\n\n    [ ] +1 approve\n    [ ] +0 no opinion\n    [ ] -1 disapprove with the reason\n\nThanks,\nOn behalf of Apache InLong(Incubating) community\n\n")),(0,o.kt)("h4",{id:"522-vote-result-template"},"5.2.2 Vote Result template"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"Title\uff1a[RESULT][VOTE] Release Apache InLong ${release_version} {rc_version}\n\nContent\uff1a\nHi all\n\nThanks for reviewing and voting for Apache InLong(Incubating) ${release_version} {rc_version}\nrelease, I am happy to announce the release voting has passed with [vote result count]\nbinding votes, no +0 or -1 votes. Binding votes are from IPMC\n\n   - xxx\n   - xxx\n   - xxx\n\nThe voting thread is:\n[Link for vote thread]\n\nMany thanks for all our mentors helping us with the release procedure, and\nall IPMC helped us to review and vote for Apache InLong(Incubating) release. I will\nbe working on publishing the artifacts soon.\n\nThanks\nOn behalf of Apache InLong(Incubating) community\n")),(0,o.kt)("h2",{id:"6-officially-released"},"6. Officially released"),(0,o.kt)("h3",{id:"61-merge-branch-release-release_version-to-master-branch"},"6.1 Merge branch release-${release_version} to master branch"),(0,o.kt)("h3",{id:"62-move-source-code-and-binary-package-from-dev-to-release-repository-on-svn"},"6.2 Move source code and binary package from DEV to release repository on SVN."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'svn mv https://dist.apache.org/repos/dist/dev/incubator/inlong/${release_version}-${rc_version} https://dist.apache.org/repos/dist/release/incubator/inlong/${release_version} -m "Release ${release_version}"\n')),(0,o.kt)("h3",{id:"63-check-whether-the-dev-and-release-is-correct"},"6.3 Check whether the dev and release is correct"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Make sure ",(0,o.kt)("a",{parentName:"li",href:"https://dist.apache.org/repos/dist/dev/incubator/inlong/"},"dev"),"\u4e0b\u7684",(0,o.kt)("inlineCode",{parentName:"li"},"${release_version}-${rc_version}")," is deleted"),(0,o.kt)("li",{parentName:"ol"},"Delete release package of pre versions",(0,o.kt)("a",{parentName:"li",href:"https://dist.apache.org/repos/dist/release/incubator/inlong/"},"release"),"\uff0cthese packages will be saved ",(0,o.kt)("a",{parentName:"li",href:"https://archive.apache.org/dist/incubator/inlong/"},"here"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'svn delete https://dist.apache.org/repos/dist/release/incubator/inlong/${last_release_version} -m "Delete ${last_release_version}"\n')),(0,o.kt)("h3",{id:"64-release-version-in-apache-staging"},"6.4 Release version in Apache Staging"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Make sure all artifacts are ok"),(0,o.kt)("ol",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ol"},"Log in ",(0,o.kt)("a",{parentName:"li",href:"http://repository.apache.org"},"http://repository.apache.org")," with your Apache account"),(0,o.kt)("li",{parentName:"ol"},"Click the Staging repositories on the left"),(0,o.kt)("li",{parentName:"ol"},"Searching InLong at choose the latest uploaded repository which is specified in the vote email"),(0,o.kt)("li",{parentName:"ol"},"Click the ",(0,o.kt)("inlineCode",{parentName:"li"},"Release")," button above which will trigger a serials of checks"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," Wait the repository sync to other repositories which generally takes 24 hours")),(0,o.kt)("h3",{id:"65-update-links-on-official-website"},"6.5 Update links on official website"),(0,o.kt)("h3",{id:"66-send-email-to-devinlongapacheorg-and-generalincubatorapacheorg"},"6.6. Send email to ",(0,o.kt)("inlineCode",{parentName:"h3"},"dev@inlong.apache.org")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"general@incubator.apache.org")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Please make sure deployment in step 6.4 is successfully, and generally wait 24 hours between 6.4 and send emails")," "),(0,o.kt)("p",null,"Release announce email template\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"Title\uff1a [ANNOUNCE] Release Apache InLong(incubating) ${release_version}\nContent\uff1a\nHi all,\n\nThe Apache InLong(incubating) community is pleased to announce \nthat Apache InLong(incubating) ${release_version} has been released!\n\nApache InLong is a one-stop integration framework for massive data that provides automatic, secure,\ndistributed, and efficient data publishing and subscription capabilities.\nThis platform helps you easily build stream-based data applications.\n\nDownload Links: https://inlong.apache.org/download/main\n\nRelease Notes: https://inlong.apache.org/download/release-${release_version}\n\nWebsite: https://inlong.apache.org/\n\nInLong Resources:\n- Issue: https://github.com/apache/incubator-inlong/issues\n- Mailing list: dev@inlong.apache.org\n\nThanks\nOn behalf of Apache InLong(Incubating) community\n")))}d.isMDXComponent=!0}}]);