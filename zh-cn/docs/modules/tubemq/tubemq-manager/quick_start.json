{
  "filename": "quick_start.md",
  "__html": "<h2>部署TubeMQ Manager</h2>\n<p>安装文件在inlong-tubemq-manager目录.</p>\n<h3>配置</h3>\n<ul>\n<li>在mysql中创建<code>tubemanager</code>数据和相应用户.</li>\n<li>在conf/application.properties中添加mysql信息：</li>\n</ul>\n<pre><code class=\"language-ini\"><span class=\"hljs-comment\"># mysql configuration for manager</span>\n<span class=\"hljs-attr\">spring.datasource.url</span>=jdbc:mysql://mysql_ip:mysql_port/tubemanager\n<span class=\"hljs-attr\">spring.datasource.username</span>=mysql_username\n<span class=\"hljs-attr\">spring.datasource.password</span>=mysql_password\n</code></pre>\n<h3>启动服务</h3>\n<pre><code class=\"language-bash\">$ bin/start-manager.sh \n</code></pre>\n<h3>初始化TubeMQ集群</h3>\n<pre><code>vim bin/init-tube-cluster.sh\n</code></pre>\n<p>替换如下六个参数</p>\n<pre><code>TUBE_MANAGER_IP=   //tube manager服务启动ip\nTUBE_MANAGER_PORT=   //tube manager服务启动port\nTUBE_MASTER_IP=   //tube 集群master ip\nTUBE_MASTER_PORT=\nTUBE_MASTER_WEB_PORT=\nTUBE_MASTER_TOKEN=\n</code></pre>\n<p>然后执行以下命令：</p>\n<pre><code>sh bin/init-tube-cluster.sh\n</code></pre>\n<p>如上操作会创建一个clusterId为1的tube集群，注意该操作只进行一次，之后重启服务无需新建集群</p>\n<h3>附录：其它操作接口</h3>\n<h4>cluster</h4>\n<p>查询clusterId以及clusterName全量数据 （get)</p>\n<p>示例</p>\n<p>【GET】 /v1/cluster</p>\n<p>返回值</p>\n<pre><code>{\n&quot;errMsg&quot;: &quot;&quot;,\n&quot;errCode&quot;: 0,\n&quot;result&quot;: true,\n&quot;data&quot;: &quot;[{\\&quot;clusterId\\&quot;:1,\\&quot;clusterName\\&quot;:\\&quot;1124\\&quot;, \\&quot;masterIp\\&quot;:\\&quot;127.0.0.1\\&quot;}]&quot;\n}\n</code></pre>\n<h4>topic</h4>\n<h4>添加topicTask</h4>\n<pre><code>type\t(必填) 请求类型，字段填写：op_query\nclusterId\t(必填) 请求集群id\naddTopicTasks (必填) topicTasks，创建task任务json，\nuser\t(必填) 之后接入权限验证需要验证用户，这里预留出来\n</code></pre>\n<p>addTopicTasks目前只包括一个字段为topicName\n之后接入region设计会新加入region字段表示不同区域的broker\n目前一个addTopicTask会在cluster中的所有broker创建topic</p>\n<p>AddTopicTasks 为以下对象的List，可携带多个创建topic请求</p>\n<pre><code>topicName\t(必填) topic名称\n</code></pre>\n<p>示例</p>\n<p>【POST】 /v1/task?method=addTopicTask</p>\n<pre><code>{\n&quot;clusterId&quot;: &quot;1&quot;,\n&quot;addTopicTasks&quot;: [{&quot;topicName&quot;: &quot;1&quot;}],\n&quot;user&quot;: &quot;test&quot;\n}\n</code></pre>\n<p>返回json格式样例</p>\n<pre><code>{\n&quot;errMsg&quot;: &quot;There are topic tasks [a12322] already in adding status&quot;,\n&quot;errCode&quot;: 200,\n&quot;result&quot;: false,\n&quot;data&quot;: &quot;&quot;\n}\n</code></pre>\n<p>result为false为写入task失败</p>\n<h4>查询某一个topic是否创建成功（业务可以写入）</h4>\n<pre><code>clusterId\t(必填) 请求集群id\ntopicName   (必填) 查询topic名称\nuser\t(必填) 之后接入权限验证需要验证用户，这里预留出来\n</code></pre>\n<p>示例</p>\n<p>【POST】 /v1/topic?method=queryCanWrite</p>\n<pre><code>{\n&quot;clusterId&quot;: &quot;1&quot;,\n&quot;topicName&quot;: &quot;1&quot;,\n&quot;user&quot;: &quot;test&quot;\n}\n</code></pre>\n<p>返回json格式样例</p>\n<pre><code>{ &quot;result&quot;:true, &quot;errCode&quot;:0, &quot;errMsg&quot;:&quot;OK&quot;, }\n{ &quot;result&quot;:false, &quot;errCode&quot;: 100, &quot;errMsg&quot;:&quot;topic test is not writable&quot;}\n{ &quot;result&quot;:false, &quot;errCode&quot;: 101, &quot;errMsg&quot;:&quot;no such topic in master&quot;}\n</code></pre>\n<p>result为false为不可写</p>\n",
  "link": "/zh-cn/docs/modules/tubemq/tubemq-manager/quick_start.html",
  "meta": {}
}