{
  "filename": "quick_start.md",
  "__html": "<h2>~~~~一、安装</h2>\n<pre><code>环境要求：\njava JDK 1.8\nMaven 3.6 +\n\ninlong目录下执行命令\nmvn clean package -DskipTests\n\n在项目下的agent-release/target里面可以找到tgz安装包\n</code></pre>\n<h2>二、配置</h2>\n<p>agent 支持两种运行模式：本地运行以及线上运行</p>\n<h3>2.1 Agent 线上运行相关设置</h3>\n<p>线上运行需要从inlong-manager拉取配置，配置conf/agent.properties如下：</p>\n<pre><code class=\"language-ini\"><span class=\"hljs-attr\">agent.fetcher.classname</span>=org.apache.inlong.agent.plugin.fetcher.ManagerFetcher (设置任务获取的类名，默认为ManagerFetcher）\n<span class=\"hljs-attr\">agent.local.ip</span>=写入本机ip\n<span class=\"hljs-attr\">agent.manager.vip.http.host</span>=manager open api host\n<span class=\"hljs-attr\">agent.manager.vip.http.port</span>=manager open api port\n</code></pre>\n<h3>2.2 Proxy 相关设置</h3>\n<p>在agent目录下新建.inlong文件夹，内部新建bid+.local文件，例如设置的发送bid为a, 则新建a.local文件</p>\n<p>内部将写入：</p>\n<pre><code class=\"language-ini\">{\"cluster_id\":1,\"isInterVisit\":1,\"size\":1,\"address\": [{\"port\":写入proxy port,\"host\":\"写入proxy ip\"}], \"switch\":0}\n</code></pre>\n<h3>2.3 agent本地运行job配置</h3>\n<p>如果不使用线上模式，可以使用本地文件新建读取任务\n在conf中新建目录jobs，\nvim job1.json：</p>\n<p>写入</p>\n<pre><code class=\"language-json\">    {\n\n    <span class=\"hljs-attr\">\"job\"</span>: {\n    \n    <span class=\"hljs-attr\">\"dir\"</span>: {\n    \n    <span class=\"hljs-attr\">\"pattern\"</span>: <span class=\"hljs-string\">\"需要读取的文件路径，可包含正则表达式，例如test/inlong_[0-9]{1}，监听test下创建的新文件\"</span>\n    \n    },\n    \n    <span class=\"hljs-attr\">\"trigger\"</span>: <span class=\"hljs-string\">\"org.apache.inlong.agent.plugin.trigger.DirectoryTrigger\"</span>,\n    \n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    \n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"fileAgentTest\"</span>,\n    \n    <span class=\"hljs-attr\">\"source\"</span>: <span class=\"hljs-string\">\"org.apache.inlong.agent.plugin.sources.TextFileSource\"</span>,\n    \n    <span class=\"hljs-attr\">\"sink\"</span>: <span class=\"hljs-string\">\"org.apache.inlong.agent.plugin.sinks.ProxySink\"</span>,\n    \n    <span class=\"hljs-attr\">\"channel\"</span>: <span class=\"hljs-string\">\"org.apache.inlong.agent.plugin.channel.MemoryChannel\"</span>\n    \n    },\n    \n    <span class=\"hljs-attr\">\"proxy\"</span>: {\n    \n    <span class=\"hljs-attr\">\"bid\"</span>: <span class=\"hljs-string\">\"testbid1\"</span>\n    \n    }\n    \n    }\n</code></pre>\n<p>其中各个参数含义为：</p>\n<ul>\n<li>job.dir.pattern: 配置读取的文件路径，可包含正则表达式</li>\n<li>job.trigger: 触发器名称，默认为DirectoryTrigger，功能为监听文件夹下的文件产生事件，任务运行时已有的文件不会读取</li>\n<li>job.source: 使用的数据源类型，默认为TextFileSource，读取文本文件</li>\n<li>job.sink：使用的写入器类型，默认为ProxySink，发送消息到proxy中</li>\n<li>proxy.bid: 写入proxy时使用的bid类型</li>\n</ul>\n<h3>2.4 实时添加job配置</h3>\n<h4>2.4.1 agent.propertities 修改下面两处</h4>\n<pre><code class=\"language-ini\"><span class=\"hljs-comment\"># whether enable http service</span>\n<span class=\"hljs-attr\">agent.http.enable</span>=<span class=\"hljs-literal\">true</span>\n<span class=\"hljs-comment\"># http default port</span>\n<span class=\"hljs-attr\">agent.http.port</span>=可用端口\n</code></pre>\n<h4>2.4.2 执行如下命令：</h4>\n<pre><code class=\"language-bash\">curl --location --request POST <span class=\"hljs-string\">'http://localhost:8129/config/job'</span> \\\n--header <span class=\"hljs-string\">'Content-Type: application/json'</span> \\\n--data <span class=\"hljs-string\">'{\n\"job\": {\n\"dir\": {\n\"path\": \"\",\n\"pattern\": \"/data/inlong-agent/test.log\"\n},\n\"trigger\": \"org.apache.inlong.agent.plugin.trigger.DirectoryTrigger\",\n\"id\": 1,\n\"thread\": {\n\"running\": {\n\"core\": \"4\"\n}\n},\n\"name\": \"fileAgentTest\",\n\"source\": \"org.apache.inlong.agent.plugin.sources.TextFileSource\",\n\"sink\": \"org.apache.inlong.agent.plugin.sinks.TdBusSink\",\n\"channel\": \"org.apache.inlong.agent.plugin.channel.MemoryChannel\"\n},\n\"proxy\": {\n\"bid\": \"bid10\"\n},\n\"op\": \"add\"\n}'</span>\n</code></pre>\n<pre><code>其中参数分别为：\npattern: 代表读取/data/inlong-agent/test.log文件，需要新建任务后再创建文件\nproxy.bid: 代表发送到proxy使用的bid\n</code></pre>\n<h2>三、运行</h2>\n<p>解压后如下命令运行</p>\n<pre><code class=\"language-bash\">sh agent.sh start\n</code></pre>\n",
  "link": "/zh-cn/docs/modules/agent/quick_start.html",
  "meta": {}
}