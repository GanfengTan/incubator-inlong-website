{
  "filename": "quick_start.md",
  "__html": "<h1>环境要求</h1>\n<ul>\n<li>Java JDK 1.8</li>\n<li>Maven 3.6+</li>\n<li>Flink 1.9.3</li>\n<li>Zookeeper</li>\n</ul>\n<h2>配置flink运行环境</h2>\n<p>当前inlong-sort是基于flink的一个应用，因此运行inlong-sort应用前，需要准备好flink环境。</p>\n<p><a href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.9/ops/deployment/cluster_setup.html\" title=\"how to set up flink environment\">如何配置flink环境</a></p>\n<p>由于当前inlong-sort依赖的是flink1.9.3版本，因此在下载部署包时，请选择<code>flink-1.9.3-bin-scala_2.11.tgz</code></p>\n<p>flink环境配置完成后，可以通过浏览器访问flink的web ui，对应的地址是<code>/{flink部署路径}/conf/masters</code>文件中的地址</p>\n<h1>编译</h1>\n<ul>\n<li>步骤一：进入inlong-sort的目录\n<code>cd /your_path/Inlong/inlong-sort</code></li>\n<li>步骤二：编译\n<code>mvn clean package</code></li>\n</ul>\n<p>通过以上两个步骤在目录<code>/your_path/Inlong/inlong-sort/core/target</code>中，就会产出jar包<code>inlong-sort-core-{version}.jar</code></p>\n<h1>启动inlong-sort应用</h1>\n<p>有了上述编译阶段产出的jar包后，就可以启动inlong-sort的应用了。</p>\n<p><a href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.9/ops/deployment/yarn_setup.html#submit-job-to-flink\" title=\"如何提交flink作业\">如何提交flink作业</a></p>\n<p>示例：</p>\n<ul>\n<li><code>./bin/flink run -c org.apache.inlong.sort.flink.Entrance inlong-sort-core-1.0-SNAPSHOT.jar --cluster-id my_application --zookeeper.quorum 127.0.0.1:2181 --zookeeper.path.root /inlong-sort --source.type tubemq --sink.type hive</code></li>\n</ul>\n<p>注意：</p>\n<ul>\n<li>\n<p><code>-c org.apache.inlong.sort.flink.Entrance</code> 表示main class name</p>\n</li>\n<li>\n<p><code>inlong-sort-core-1.0-SNAPSHOT.jar</code> 为编译阶段产出的jar包</p>\n</li>\n</ul>\n<h1>必要的配置</h1>\n<ul>\n<li><code>--cluster-id</code> 用来唯一标识一个inlong-sort作业</li>\n<li><code>--zookeeper.quorum</code> zk quorum</li>\n<li><code>--zookeeper.path.root</code> zk根目录</li>\n<li><code>--source.type</code> 数据源的种类, 当前仅支持&quot;tubemq&quot;</li>\n<li><code>--sink.type</code> 存储系统的种类，当前支持&quot;clickhouse&quot; 和 &quot;hive&quot;</li>\n</ul>\n<p><strong>配置示例</strong></p>\n<p><code>--cluster-id my_application --zookeeper.quorum 192.127.0.1:2181 --zookeeper.path.root /zk_root --source.type tubemq --sink.type hive</code></p>\n<h1>所有支持的配置</h1>\n<table>\n<thead>\n<tr>\n<th>配置名</th>\n<th>是否必须</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cluster-id</td>\n<td>Y</td>\n<td>NA</td>\n<td>用来唯一标识一个inlong-sort作业</td>\n</tr>\n<tr>\n<td>zookeeper.quorum</td>\n<td>Y</td>\n<td>NA</td>\n<td>zk quorum</td>\n</tr>\n<tr>\n<td>zookeeper.path.root</td>\n<td>Y</td>\n<td>&quot;/inlong-sort&quot;</td>\n<td>zk根目录</td>\n</tr>\n<tr>\n<td>source.type</td>\n<td>Y</td>\n<td>NA</td>\n<td>数据源的种类, 当前仅支持&quot;tubemq&quot;</td>\n</tr>\n<tr>\n<td>sink.type</td>\n<td>Y</td>\n<td>NA</td>\n<td>存储系统的种类，当前支持&quot;clickhouse&quot;, &quot;iceberg&quot; 和 &quot;hive&quot;</td>\n</tr>\n<tr>\n<td>source.parallelism</td>\n<td>N</td>\n<td>1</td>\n<td>source的并行度</td>\n</tr>\n<tr>\n<td>deserialization.parallelism</td>\n<td>N</td>\n<td>1</td>\n<td>deserialization的并行度</td>\n</tr>\n<tr>\n<td>sink.parallelism</td>\n<td>N</td>\n<td>1</td>\n<td>sink的并行度</td>\n</tr>\n<tr>\n<td>tubemq.master.address</td>\n<td>N</td>\n<td>NA</td>\n<td>订阅tube的master address，优先级低于zk上的元数据</td>\n</tr>\n<tr>\n<td>tubemq.session.key</td>\n<td>N</td>\n<td>&quot;inlong-sort&quot;</td>\n<td>订阅tube使用的session key前缀</td>\n</tr>\n<tr>\n<td>tubemq.bootstrap.from.max</td>\n<td>N</td>\n<td>false</td>\n<td>是否从最大位置开始消费tube</td>\n</tr>\n<tr>\n<td>tubemq.message.not.found.wait.period</td>\n<td>N</td>\n<td>350ms</td>\n<td>tube返回message not found后的等待时间</td>\n</tr>\n<tr>\n<td>tubemq.subscribe.retry.timeout</td>\n<td>N</td>\n<td>300000</td>\n<td>订阅tube的重试超时时间，单位为ms</td>\n</tr>\n<tr>\n<td>zookeeper.client.session-timeout</td>\n<td>N</td>\n<td>60000</td>\n<td>zk session的超时时间，单位为ms</td>\n</tr>\n<tr>\n<td>zookeeper.client.connection-timeout</td>\n<td>N</td>\n<td>15000</td>\n<td>zk连接的超时时间，单位为ms</td>\n</tr>\n<tr>\n<td>zookeeper.client.retry-wait</td>\n<td>N</td>\n<td>5000</td>\n<td>zk重连间的等待时间，单位为ms</td>\n</tr>\n<tr>\n<td>zookeeper.client.max-retry-attempts</td>\n<td>N</td>\n<td>3</td>\n<td>zk重连的最大重试次数</td>\n</tr>\n<tr>\n<td>zookeeper.client.acl</td>\n<td>N</td>\n<td>&quot;open&quot;</td>\n<td>Defines the ACL (open/creator) to be configured on ZK node. The configuration value can be set to “creator” if the ZooKeeper server configuration has the “authProvider” property mapped to use SASLAuthenticationProvider and the cluster is configured to run in secure mode (Kerberos)</td>\n</tr>\n<tr>\n<td>zookeeper.sasl.disable</td>\n<td>N</td>\n<td>false</td>\n<td>是否禁用sasl</td>\n</tr>\n</tbody>\n</table>\n",
  "link": "/zh-cn/docs/modules/sort/quick_start.html",
  "meta": {
    "快速开始 - Apache InLong-sort": ""
  }
}